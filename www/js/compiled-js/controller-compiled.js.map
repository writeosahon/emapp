{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 19/02/2018.\r\n */\r\n\r\n/**\r\n * file defines all View-Models, Controllers and Event Listeners used by the app\r\n *\r\n * The 'utopiasoftware.emap' namespace has being defined in the base js file.\r\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n * also used interchangeably\r\n */\r\n\r\n\r\n// define the controller namespace\r\nutopiasoftware.emap.controller = {\r\n\r\n    /**\r\n     * method contains the stratup/bootstrap code needed to initiate app logic execution\r\n     */\r\n    startup: function(){\r\n\r\n        // initialise the onsen library\r\n        ons.ready(function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                // does nothing for now!!\r\n            });\r\n\r\n            // displaying prepping message\r\n            $('#loader-modal-message').html(\"Loading App...\");\r\n            $('#loader-modal').get(0).show(); // show loader\r\n\r\n            if(localStorage.getItem(\"app-status\") && localStorage.getItem(\"app-status\") !== \"\"){ // there is a previous logged in user\r\n                // load the login page\r\n                $('ons-splitter').get(0).content.load(\"login-template\");\r\n            }\r\n            else{ // no previous logged in user\r\n                // load the signup page\r\n                $('ons-splitter').get(0).content.load(\"signup-template\");\r\n            }\r\n\r\n            // load the app 1st page\r\n            //$('ons-splitter').get(0).content.load(\"app-main-template\");\r\n\r\n            // START ALL CORDOVA PLUGINS CONFIGURATIONS\r\n            try {\r\n                // lock the orientation of the device to 'PORTRAIT'\r\n                screen.lockOrientation('portrait');\r\n            }\r\n            catch(err){}\r\n\r\n            // set status bar color\r\n            StatusBar.backgroundColorByHexString(\"#DC723D\");\r\n            navigator.splashscreen.hide(); // hide the splashscreen\r\n\r\n            utopiasoftware.emap.model.isAppReady = true; // true that app is fully loaded and ready\r\n\r\n\r\n        }); // end of ons.ready()\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is the view-model of the signup page\r\n     */\r\n    signupPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.emap.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = utopiasoftware.emap.controller.signupPageViewModel.backButtonClicked;\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.emap.controller.signupPageViewModel.formValidator = $('#signup-form').parsley();\r\n\r\n                // attach listener for the sign up button on the page\r\n                $('#signup-signup-button').get(0).onclick = function(){\r\n                    // run the validation method for the form\r\n                    utopiasoftware.emap.controller.signupPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for form field validation failure event\r\n                utopiasoftware.emap.controller.signupPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--warning hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.emap.controller.signupPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--warning hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.emap.controller.signupPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.emap.controller.signupPageViewModel.signupFormValidated);\r\n\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n            //$('#menu-tabbar .tabbar__border').css(\"visibility\", \"hidden\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // stop the rotating animation on main menu page\r\n            //$('.rotating-infinite-ease-in-1').addClass('rotating-infinite-ease-in-1-paused');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // stop the rotating animation on main menu page\r\n            //$('.rotating-infinite-ease-in-1').addClass('rotating-infinite-ease-in-1-paused');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            ons.notification.confirm('Do you want to close the app?', {title: 'Exit App',\r\n                    buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                .then(function(index) {\r\n                    if (index === 1) { // OK button\r\n                        navigator.app.exitApp(); // Close the app\r\n                    }\r\n                });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when signup form is successfully validated\r\n         */\r\n        signupFormValidated: function() {\r\n            // get the entered password\r\n            var userPass = $('#signup-password').val().trim();\r\n            // set the local storage app-status to the user password\r\n            localStorage.setItem(\"app-status\", userPass);\r\n            // load the main page i.e. toc page\r\n            $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * object is the view-model of the login page\r\n     */\r\n    loginPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.emap.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = utopiasoftware.emap.controller.loginPageViewModel.backButtonClicked;\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.emap.controller.loginPageViewModel.formValidator = $('#login-form').parsley();\r\n\r\n                // attach listener for the login button on the page\r\n                $('#login-login-button').get(0).onclick = function(){\r\n                    // run the validation method for the form\r\n                    utopiasoftware.emap.controller.loginPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for form field validation failure event\r\n                utopiasoftware.emap.controller.loginPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--warning hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.emap.controller.loginPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--warning hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.emap.controller.loginPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.emap.controller.loginPageViewModel.loginFormValidated);\r\n\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n            //$('#menu-tabbar .tabbar__border').css(\"visibility\", \"hidden\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // stop the rotating animation on main menu page\r\n            //$('.rotating-infinite-ease-in-1').addClass('rotating-infinite-ease-in-1-paused');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // stop the rotating animation on main menu page\r\n            //$('.rotating-infinite-ease-in-1').addClass('rotating-infinite-ease-in-1-paused');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            ons.notification.confirm('Do you want to close the app?', {title: 'Exit App',\r\n                    buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                .then(function(index) {\r\n                    if (index === 1) { // OK button\r\n                        navigator.app.exitApp(); // Close the app\r\n                    }\r\n                });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when login form is successfully validated\r\n         */\r\n        loginFormValidated: function() {\r\n            // get the entered password\r\n            var userPass = $('#login-password').val().trim();\r\n\r\n            if(userPass === 'admin-admin-admin'){ // this is a special admin login, so grant user access\r\n                // clear all local storage first\r\n                localStorage.clear();\r\n                // load the main page i.e. toc page\r\n                $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n            }\r\n            else if(userPass === localStorage.getItem(\"app-status\")){ // password matched, so log user in\r\n                // load the main page i.e. toc page\r\n                $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n            }\r\n            else { // user login failed, so inform user of this\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> Log In Failed',\r\n                    messageHTML: '<span>' + 'Invalid user password' + '</span>',\r\n                    cancelable: false\r\n                });\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * object is view-model for toc page\r\n     */\r\n    tocPageViewModel: {\r\n\r\n\r\n        /**\r\n         * property holds the toc date picker\r\n         */\r\n        tocDatePicker: null,\r\n\r\n        /**\r\n         * property holds the grid for toc\r\n         */\r\n        tocGrid: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.emap.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = utopiasoftware.emap.controller.tocPageViewModel.backButtonClicked;\r\n\r\n                // inject the the modules required to create the transaction history grid\r\n                ej.grids.Grid.Inject(ej.grids.Page, ej.grids.Scroll, ej.grids.Search, ej.grids.Toolbar,\r\n                    ej.grids.DetailRow);\r\n\r\n                // create the date picker\r\n                utopiasoftware.emap.controller.tocPageViewModel.tocDatePicker =\r\n                    new ej.calendars.DatePicker({\r\n                        placeholder: 'Pick Meeting Date',\r\n                        floatLabelType: 'Auto',\r\n                        readonly: true,\r\n                        // sets the value.\r\n                        value: new Date(),\r\n                        // sets the min date\r\n                        //min: new Date(),\r\n                        //sets the max date\r\n                        //max: new Date(),\r\n                        format: 'yyyy-MM-dd',\r\n                        focus: function(){ // listen for when component has focus\r\n                            // open the date picker\r\n                            utopiasoftware.emap.controller.tocPageViewModel.tocDatePicker.show();\r\n                        },\r\n                        change: function(){\r\n\r\n                            utopiasoftware.emap.controller.tocPageViewModel.\r\n                            updateTocGrid(kendo.toString(utopiasoftware.emap.controller.tocPageViewModel.\r\n                                tocDatePicker.value, 'yyyy-MM-dd'));\r\n                        }\r\n                    });\r\n\r\n                // render initialized toc DatePicker\r\n                utopiasoftware.emap.controller.tocPageViewModel.tocDatePicker.\r\n                appendTo('#toc-date-picker');\r\n\r\n                utopiasoftware.emap.controller.tocPageViewModel.\r\n                updateTocGrid(kendo.toString(utopiasoftware.emap.controller.tocPageViewModel.tocDatePicker.value, 'yyyy-MM-dd'));\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n            //$('#menu-tabbar .tabbar__border').css(\"visibility\", \"hidden\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // stop the rotating animation on main menu page\r\n            //$('.rotating-infinite-ease-in-1').addClass('rotating-infinite-ease-in-1-paused');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // stop the rotating animation on main menu page\r\n            //$('.rotating-infinite-ease-in-1').addClass('rotating-infinite-ease-in-1-paused');\r\n        },\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            ons.notification.confirm('Do you want to close the app?', {title: 'Exit App',\r\n                    buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                .then(function(index) {\r\n                    if (index === 1) { // OK button\r\n                        navigator.app.exitApp(); // Close the app\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * method is used to create/update the toc grid component\r\n         */\r\n        updateTocGrid: function(meetingDateString){\r\n\r\n            // check if the TOC Grid has been created before, if so, show spinner\r\n            if(utopiasoftware.emap.controller.tocPageViewModel.tocGrid){ // grid has previously been created\r\n                // show spinner for the grid object\r\n                utopiasoftware.emap.controller.tocPageViewModel.tocGrid.showSpinner();\r\n            }\r\n\r\n            // call the method that will load the table of content for the exco meeting\r\n            utopiasoftware.emap.controller.tocPageViewModel.\r\n            tocFileReader(meetingDateString, \"content.json\").\r\n            then(function(dataObject){\r\n                if(utopiasoftware.emap.controller.tocPageViewModel.tocGrid){ // grid has previously been created\r\n                    // hide spinner\r\n                    utopiasoftware.emap.controller.tocPageViewModel.tocGrid.hideSpinner();\r\n                    // destroy the grid object\r\n                    utopiasoftware.emap.controller.tocPageViewModel.tocGrid.destroy();\r\n                }\r\n\r\n                utopiasoftware.emap.controller.tocPageViewModel.tocGrid =\r\n                    new ej.grids.Grid({\r\n                        // Width for grid\r\n                        width: '100%',\r\n                        allowTextWrap: true,\r\n                        allowSelection: false,\r\n                        toolbar: ['search'],\r\n                        columns: [\r\n                            { field: 'sno',\r\n                                headerText: '<div style=\"color: #000000; background-color: #48f2a2; width: 100%; height: 100%; font-size: 1.2em; text-transform: uppercase\">S/N</div>',\r\n                                width: \"10%\", clipMode: 'ellipsiswithtooltip', customAttributes: {\r\n                                class: 'toc-grid-sno-column'}\r\n                            },\r\n                            { field: 'subject',\r\n                                headerText: '<div style=\"color: #000000; background-color: #48f2a2; width: 100%; height: 100%; font-size: 1.2em; text-transform: uppercase\">Subject</div>',\r\n                                width: \"30%\", clipMode: 'ellipsiswithtooltip', customAttributes: {\r\n                                class: 'toc-grid-subject-column'}\r\n                            },\r\n                            { field: 'agenda',\r\n                                headerText: '<div style=\"color: #000000; background-color: #48f2a2; width: 100%; height: 100%; font-size: 1.2em; text-transform: uppercase\">Agenda</div>',\r\n                                width: \"35%\", clipMode: 'ellipsiswithtooltip', customAttributes: {\r\n                                class: 'toc-grid-agenda-column'}\r\n                            },\r\n                            { field: 'sno',\r\n                                headerText: '<div style=\"color: #000000; background-color: #48f2a2; width: 100%; height: 100%; font-size: 1.2em; text-transform: uppercase\"></div>',\r\n                                width: \"25%\", template: '#attachments-column-template', clipMode: 'ellipsiswithtooltip',\r\n                                customAttributes: {\r\n                                class: 'toc-grid-sno-column'}},\r\n                            { field: 'extract',\r\n                                headerText: '', width: \"25%\", visible: false}\r\n                        ],\r\n                        rowDataBound: function(rowDataBoundEventArgs){\r\n                            if(rowDataBoundEventArgs.data.extract && rowDataBoundEventArgs.data.extract == \"true\"){\r\n                                rowDataBoundEventArgs.row.classList.add('toc-grid-extract-row');\r\n                            }\r\n                            else{\r\n                                rowDataBoundEventArgs.row.classList.add('toc-grid-row');\r\n                            }\r\n                        },\r\n                        dataSource: dataObject.toc,\r\n                        childGrid: {\r\n                            dataSource: dataObject.attachments,\r\n                            queryString: 'sno',\r\n                            columns: [\r\n                                { field: 'filename', headerText: 'Attachments', width: '80%', customAttributes: {\r\n                                    class: 'toc-grid-attachments-filename-column'}},\r\n                                { field: 'fileurl',\r\n                                    headerText: '',\r\n                                    width: \"20%\", template: '#view-attachment-column-template', clipMode: 'ellipsiswithtooltip'}\r\n                            ]\r\n                        }\r\n                    });\r\n\r\n                //append the newly created grid\r\n                utopiasoftware.emap.controller.tocPageViewModel.tocGrid.\r\n                appendTo('#toc-grid');\r\n\r\n            }).catch(function(err){console.log(err);});\r\n\r\n        },\r\n\r\n\r\n        tocFileReader: function(directoryName, fileName){\r\n\r\n            var mainPromiseResolve = null;\r\n            var mainPromiseReject = null;\r\n\r\n            var mainPromise = new Promise(function(mainResolve, mainReject){\r\n\r\n                mainPromiseResolve = mainResolve;\r\n                mainPromiseReject = mainReject;\r\n\r\n                /*new Promise(function(resolve, reject){ // request file read write permissions\r\n                    cordova.plugins.diagnostic.requestRuntimePermissions(resolve, reject, [\r\n                        cordova.plugins.diagnostic.permission.WRITE_EXTERNAL_STORAGE,\r\n                        cordova.plugins.diagnostic.permission.READ_EXTERNAL_STORAGE\r\n                    ])\r\n                })*/\r\n                Promise.resolve({}).\r\n                then(function(statuses){\r\n                    /*console.log(\"READ\", statuses[cordova.plugins.diagnostic.permission.READ_EXTERNAL_STORAGE]);\r\n                    if(! (statuses[cordova.plugins.diagnostic.permission.WRITE_EXTERNAL_STORAGE] ===\r\n                        cordova.plugins.diagnostic.permissionStatus.GRANTED ||\r\n                        statuses[cordova.plugins.diagnostic.permission.READ_EXTERNAL_STORAGE] ===\r\n                        cordova.plugins.diagnostic.permissionStatus.GRANTED)){\r\n                        throw \"error\";\r\n                    }*/\r\n\r\n                    return new Promise(function(resolve, reject){ // return the directory where to store the document/image\r\n                        window.resolveLocalFileSystemURL(cordova.file.externalRootDirectory, resolve, reject);\r\n                    });\r\n                }).\r\n                then(function(rootDir){ // get the device root directory\r\n                    return new Promise(function(resolve, reject){\r\n                        // read from the EMAPP/[MEETING-DATE] directory contained in the root directory\r\n                        rootDir.getDirectory(\"EMAPP/\" + directoryName, {create: false}, resolve, reject);\r\n                    });\r\n                }).\r\n                then(function(meetingDir){\r\n                    console.log(meetingDir.toURL());\r\n                    return new Promise(function(resolve, reject){\r\n                        meetingDir.getFile(fileName, {create: false}, resolve, reject);\r\n                    });\r\n                }).\r\n                then(function(fileEntry){\r\n                    return new Promise(function(resolve, reject){ // return the FileWriter object used to write content to the created file\r\n                        fileEntry.file(resolve, reject);\r\n                    });\r\n                }).\r\n                then(function(file){\r\n\r\n                    return new Promise(function(resolve, reject){\r\n                        var fileReader = new FileReader();\r\n                        fileReader.onloadend = function(){\r\n                            resolve(this.result);\r\n                        };\r\n\r\n\r\n                        fileReader.readAsText(file); // read the file\r\n                    });\r\n                }).\r\n                then(function(fileContent){\r\n                    console.log(fileContent);\r\n                    mainPromiseResolve(JSON.parse(fileContent));\r\n                }).\r\n                catch(function(err){\r\n                    console.log(\"ERROR\", err);\r\n                    mainPromiseResolve({toc: [], attachments: []});\r\n                });\r\n            });\r\n\r\n            return mainPromise;\r\n        },\r\n\r\n        viewAttachmentsList: function(projectSerialNumber, buttonElem){\r\n            var rowIndex = kendo.parseInt(projectSerialNumber) - 1;\r\n            switch($(buttonElem).attr('data-emap-grid-row-state')){\r\n                case \"collapsed\":\r\n                    utopiasoftware.emap.controller.tocPageViewModel.tocGrid.detailRowModule.expand(rowIndex);\r\n                    $(buttonElem).attr('data-emap-grid-row-state', \"expanded\");\r\n                    break;\r\n                case \"expanded\":\r\n                    utopiasoftware.emap.controller.tocPageViewModel.tocGrid.detailRowModule.collapse(rowIndex);\r\n                    $(buttonElem).attr('data-emap-grid-row-state', \"collapsed\");\r\n                    break;\r\n            }\r\n\r\n        },\r\n\r\n        viewAttachment: function(buttonElem){\r\n            var fileurl = $(buttonElem).attr('data-emap-fileurl');\r\n            // get the absolute url for the atachment to be displayed\r\n            var absoluteURL = cordova.file.externalRootDirectory + \"EMAPP/\" +\r\n                kendo.toString(utopiasoftware.emap.controller.tocPageViewModel.tocDatePicker.value, 'yyyy-MM-dd') +\r\n                    \"/ATTACHMENTS/\" + fileurl;\r\n            console.log(\"FILE URL \", absoluteURL);\r\n\r\n            new Promise(function(resolve, reject){\r\n                cordova.plugins.fileOpener2.showOpenWithDialog(\r\n                    absoluteURL,\r\n                    'application/pdf',\r\n                    {\r\n                        error : reject,\r\n                        success : resolve\r\n                    }\r\n                );\r\n            });\r\n\r\n        }\r\n    }\r\n};\r\n"]}